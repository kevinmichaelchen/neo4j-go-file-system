// Code generated by protoc-gen-go. DO NOT EDIT.
// source: event.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Foo struct {
	F                    string   `protobuf:"bytes,1,opt,name=f,proto3" json:"f,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Foo) Reset()         { *m = Foo{} }
func (m *Foo) String() string { return proto.CompactTextString(m) }
func (*Foo) ProtoMessage()    {}
func (*Foo) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_50d46441025ad0d2, []int{0}
}
func (m *Foo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Foo.Unmarshal(m, b)
}
func (m *Foo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Foo.Marshal(b, m, deterministic)
}
func (dst *Foo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Foo.Merge(dst, src)
}
func (m *Foo) XXX_Size() int {
	return xxx_messageInfo_Foo.Size(m)
}
func (m *Foo) XXX_DiscardUnknown() {
	xxx_messageInfo_Foo.DiscardUnknown(m)
}

var xxx_messageInfo_Foo proto.InternalMessageInfo

func (m *Foo) GetF() string {
	if m != nil {
		return m.F
	}
	return ""
}

type Bar struct {
	B                    string   `protobuf:"bytes,1,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bar) Reset()         { *m = Bar{} }
func (m *Bar) String() string { return proto.CompactTextString(m) }
func (*Bar) ProtoMessage()    {}
func (*Bar) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_50d46441025ad0d2, []int{1}
}
func (m *Bar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bar.Unmarshal(m, b)
}
func (m *Bar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bar.Marshal(b, m, deterministic)
}
func (dst *Bar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bar.Merge(dst, src)
}
func (m *Bar) XXX_Size() int {
	return xxx_messageInfo_Bar.Size(m)
}
func (m *Bar) XXX_DiscardUnknown() {
	xxx_messageInfo_Bar.DiscardUnknown(m)
}

var xxx_messageInfo_Bar proto.InternalMessageInfo

func (m *Bar) GetB() string {
	if m != nil {
		return m.B
	}
	return ""
}

type EventRequest struct {
	// Types that are valid to be assigned to Event:
	//	*EventRequest_Foo
	//	*EventRequest_Bar
	Event                isEventRequest_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *EventRequest) Reset()         { *m = EventRequest{} }
func (m *EventRequest) String() string { return proto.CompactTextString(m) }
func (*EventRequest) ProtoMessage()    {}
func (*EventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_50d46441025ad0d2, []int{2}
}
func (m *EventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventRequest.Unmarshal(m, b)
}
func (m *EventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventRequest.Marshal(b, m, deterministic)
}
func (dst *EventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventRequest.Merge(dst, src)
}
func (m *EventRequest) XXX_Size() int {
	return xxx_messageInfo_EventRequest.Size(m)
}
func (m *EventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventRequest proto.InternalMessageInfo

type isEventRequest_Event interface {
	isEventRequest_Event()
}

type EventRequest_Foo struct {
	Foo *Foo `protobuf:"bytes,1,opt,name=foo,proto3,oneof"`
}

type EventRequest_Bar struct {
	Bar *Bar `protobuf:"bytes,2,opt,name=bar,proto3,oneof"`
}

func (*EventRequest_Foo) isEventRequest_Event() {}

func (*EventRequest_Bar) isEventRequest_Event() {}

func (m *EventRequest) GetEvent() isEventRequest_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *EventRequest) GetFoo() *Foo {
	if x, ok := m.GetEvent().(*EventRequest_Foo); ok {
		return x.Foo
	}
	return nil
}

func (m *EventRequest) GetBar() *Bar {
	if x, ok := m.GetEvent().(*EventRequest_Bar); ok {
		return x.Bar
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*EventRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _EventRequest_OneofMarshaler, _EventRequest_OneofUnmarshaler, _EventRequest_OneofSizer, []interface{}{
		(*EventRequest_Foo)(nil),
		(*EventRequest_Bar)(nil),
	}
}

func _EventRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*EventRequest)
	// event
	switch x := m.Event.(type) {
	case *EventRequest_Foo:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Foo); err != nil {
			return err
		}
	case *EventRequest_Bar:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Bar); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("EventRequest.Event has unexpected type %T", x)
	}
	return nil
}

func _EventRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*EventRequest)
	switch tag {
	case 1: // event.foo
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Foo)
		err := b.DecodeMessage(msg)
		m.Event = &EventRequest_Foo{msg}
		return true, err
	case 2: // event.bar
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Bar)
		err := b.DecodeMessage(msg)
		m.Event = &EventRequest_Bar{msg}
		return true, err
	default:
		return false, nil
	}
}

func _EventRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*EventRequest)
	// event
	switch x := m.Event.(type) {
	case *EventRequest_Foo:
		s := proto.Size(x.Foo)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *EventRequest_Bar:
		s := proto.Size(x.Bar)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type EventResponse struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventResponse) Reset()         { *m = EventResponse{} }
func (m *EventResponse) String() string { return proto.CompactTextString(m) }
func (*EventResponse) ProtoMessage()    {}
func (*EventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_50d46441025ad0d2, []int{3}
}
func (m *EventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventResponse.Unmarshal(m, b)
}
func (m *EventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventResponse.Marshal(b, m, deterministic)
}
func (dst *EventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventResponse.Merge(dst, src)
}
func (m *EventResponse) XXX_Size() int {
	return xxx_messageInfo_EventResponse.Size(m)
}
func (m *EventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EventResponse proto.InternalMessageInfo

func (m *EventResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func init() {
	proto.RegisterType((*Foo)(nil), "pb.Foo")
	proto.RegisterType((*Bar)(nil), "pb.Bar")
	proto.RegisterType((*EventRequest)(nil), "pb.EventRequest")
	proto.RegisterType((*EventResponse)(nil), "pb.EventResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EventServiceClient is the client API for EventService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventServiceClient interface {
	EmitEvent(ctx context.Context, in *EventRequest, opts ...grpc.CallOption) (*EventResponse, error)
}

type eventServiceClient struct {
	cc *grpc.ClientConn
}

func NewEventServiceClient(cc *grpc.ClientConn) EventServiceClient {
	return &eventServiceClient{cc}
}

func (c *eventServiceClient) EmitEvent(ctx context.Context, in *EventRequest, opts ...grpc.CallOption) (*EventResponse, error) {
	out := new(EventResponse)
	err := c.cc.Invoke(ctx, "/pb.EventService/EmitEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventServiceServer is the server API for EventService service.
type EventServiceServer interface {
	EmitEvent(context.Context, *EventRequest) (*EventResponse, error)
}

func RegisterEventServiceServer(s *grpc.Server, srv EventServiceServer) {
	s.RegisterService(&_EventService_serviceDesc, srv)
}

func _EventService_EmitEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).EmitEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.EventService/EmitEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).EmitEvent(ctx, req.(*EventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EventService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.EventService",
	HandlerType: (*EventServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EmitEvent",
			Handler:    _EventService_EmitEvent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "event.proto",
}

func init() { proto.RegisterFile("event.proto", fileDescriptor_event_50d46441025ad0d2) }

var fileDescriptor_event_50d46441025ad0d2 = []byte{
	// 196 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0xb1, 0x6e, 0x83, 0x30,
	0x14, 0x45, 0xb1, 0x51, 0x4b, 0x79, 0xd0, 0xaa, 0x75, 0x17, 0xd4, 0x0e, 0xad, 0x3c, 0x75, 0x62,
	0xa0, 0x7f, 0x60, 0x09, 0x94, 0x35, 0xce, 0x17, 0xd8, 0x91, 0x91, 0x10, 0x0a, 0xcf, 0x31, 0x0e,
	0xdf, 0x1f, 0xd9, 0x21, 0x0a, 0xeb, 0x39, 0xf2, 0xf1, 0x7d, 0x50, 0x98, 0xc5, 0x4c, 0xbe, 0xb6,
	0x0e, 0x3d, 0x32, 0x6a, 0x35, 0xff, 0x84, 0xb4, 0x43, 0x64, 0x25, 0x90, 0xbe, 0x22, 0xbf, 0xe4,
	0x2f, 0x97, 0xa4, 0x0f, 0x50, 0x28, 0x17, 0xa0, 0xbe, 0x43, 0xcd, 0xf7, 0x50, 0xb6, 0xe1, 0xb1,
	0x34, 0xe7, 0x8b, 0x99, 0x3d, 0xfb, 0x86, 0xb4, 0x47, 0x8c, 0xbe, 0x68, 0xb2, 0xda, 0xea, 0xba,
	0x43, 0xdc, 0x25, 0x32, 0xd0, 0x20, 0xb5, 0x72, 0x15, 0x7d, 0x48, 0xa1, 0x5c, 0x90, 0x5a, 0x39,
	0x91, 0xc1, 0x53, 0x9c, 0xc1, 0x7f, 0xe0, 0x75, 0x4d, 0xce, 0x16, 0xa7, 0xd9, 0xb0, 0x37, 0xa0,
	0x38, 0xc6, 0xe4, 0x8b, 0xa4, 0x38, 0x36, 0x62, 0xfd, 0xf3, 0x60, 0xdc, 0x32, 0x1c, 0x0d, 0x6b,
	0x20, 0x6f, 0x4f, 0x83, 0x8f, 0x8c, 0xbd, 0x87, 0xec, 0x76, 0xd2, 0xd7, 0xc7, 0x86, 0xdc, 0x8a,
	0x3c, 0xd1, 0xcf, 0xf1, 0xd8, 0xff, 0x6b, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2c, 0xe8, 0xda, 0x3b,
	0xfb, 0x00, 0x00, 0x00,
}
