// Code generated by protoc-gen-go. DO NOT EDIT.
// source: file.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type File struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RevisionID           string   `protobuf:"bytes,2,opt,name=revisionID,proto3" json:"revisionID,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ParentID             string   `protobuf:"bytes,4,opt,name=parentID,proto3" json:"parentID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *File) Reset()         { *m = File{} }
func (m *File) String() string { return proto.CompactTextString(m) }
func (*File) ProtoMessage()    {}
func (*File) Descriptor() ([]byte, []int) {
	return fileDescriptor_file_4e4933dfd66f3b71, []int{0}
}
func (m *File) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_File.Unmarshal(m, b)
}
func (m *File) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_File.Marshal(b, m, deterministic)
}
func (dst *File) XXX_Merge(src proto.Message) {
	xxx_messageInfo_File.Merge(dst, src)
}
func (m *File) XXX_Size() int {
	return xxx_messageInfo_File.Size(m)
}
func (m *File) XXX_DiscardUnknown() {
	xxx_messageInfo_File.DiscardUnknown(m)
}

var xxx_messageInfo_File proto.InternalMessageInfo

func (m *File) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *File) GetRevisionID() string {
	if m != nil {
		return m.RevisionID
	}
	return ""
}

func (m *File) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *File) GetParentID() string {
	if m != nil {
		return m.ParentID
	}
	return ""
}

type FileResponse struct {
	File                 *File    `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileResponse) Reset()         { *m = FileResponse{} }
func (m *FileResponse) String() string { return proto.CompactTextString(m) }
func (*FileResponse) ProtoMessage()    {}
func (*FileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_file_4e4933dfd66f3b71, []int{1}
}
func (m *FileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileResponse.Unmarshal(m, b)
}
func (m *FileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileResponse.Marshal(b, m, deterministic)
}
func (dst *FileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileResponse.Merge(dst, src)
}
func (m *FileResponse) XXX_Size() int {
	return xxx_messageInfo_FileResponse.Size(m)
}
func (m *FileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FileResponse proto.InternalMessageInfo

func (m *FileResponse) GetFile() *File {
	if m != nil {
		return m.File
	}
	return nil
}

type FileRequest struct {
	// Types that are valid to be assigned to FileEvent:
	//	*FileRequest_CreateEvent
	//	*FileRequest_UpdateEvent
	//	*FileRequest_DeleteEvent
	FileEvent            isFileRequest_FileEvent `protobuf_oneof:"fileEvent"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *FileRequest) Reset()         { *m = FileRequest{} }
func (m *FileRequest) String() string { return proto.CompactTextString(m) }
func (*FileRequest) ProtoMessage()    {}
func (*FileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_file_4e4933dfd66f3b71, []int{2}
}
func (m *FileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileRequest.Unmarshal(m, b)
}
func (m *FileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileRequest.Marshal(b, m, deterministic)
}
func (dst *FileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileRequest.Merge(dst, src)
}
func (m *FileRequest) XXX_Size() int {
	return xxx_messageInfo_FileRequest.Size(m)
}
func (m *FileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FileRequest proto.InternalMessageInfo

type isFileRequest_FileEvent interface {
	isFileRequest_FileEvent()
}

type FileRequest_CreateEvent struct {
	CreateEvent *CreateFileRequest `protobuf:"bytes,1,opt,name=createEvent,proto3,oneof"`
}

type FileRequest_UpdateEvent struct {
	UpdateEvent *UpdateFileRequest `protobuf:"bytes,2,opt,name=updateEvent,proto3,oneof"`
}

type FileRequest_DeleteEvent struct {
	DeleteEvent *DeleteFileRequest `protobuf:"bytes,3,opt,name=deleteEvent,proto3,oneof"`
}

func (*FileRequest_CreateEvent) isFileRequest_FileEvent() {}

func (*FileRequest_UpdateEvent) isFileRequest_FileEvent() {}

func (*FileRequest_DeleteEvent) isFileRequest_FileEvent() {}

func (m *FileRequest) GetFileEvent() isFileRequest_FileEvent {
	if m != nil {
		return m.FileEvent
	}
	return nil
}

func (m *FileRequest) GetCreateEvent() *CreateFileRequest {
	if x, ok := m.GetFileEvent().(*FileRequest_CreateEvent); ok {
		return x.CreateEvent
	}
	return nil
}

func (m *FileRequest) GetUpdateEvent() *UpdateFileRequest {
	if x, ok := m.GetFileEvent().(*FileRequest_UpdateEvent); ok {
		return x.UpdateEvent
	}
	return nil
}

func (m *FileRequest) GetDeleteEvent() *DeleteFileRequest {
	if x, ok := m.GetFileEvent().(*FileRequest_DeleteEvent); ok {
		return x.DeleteEvent
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*FileRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _FileRequest_OneofMarshaler, _FileRequest_OneofUnmarshaler, _FileRequest_OneofSizer, []interface{}{
		(*FileRequest_CreateEvent)(nil),
		(*FileRequest_UpdateEvent)(nil),
		(*FileRequest_DeleteEvent)(nil),
	}
}

func _FileRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*FileRequest)
	// fileEvent
	switch x := m.FileEvent.(type) {
	case *FileRequest_CreateEvent:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CreateEvent); err != nil {
			return err
		}
	case *FileRequest_UpdateEvent:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UpdateEvent); err != nil {
			return err
		}
	case *FileRequest_DeleteEvent:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeleteEvent); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("FileRequest.FileEvent has unexpected type %T", x)
	}
	return nil
}

func _FileRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*FileRequest)
	switch tag {
	case 1: // fileEvent.createEvent
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CreateFileRequest)
		err := b.DecodeMessage(msg)
		m.FileEvent = &FileRequest_CreateEvent{msg}
		return true, err
	case 2: // fileEvent.updateEvent
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UpdateFileRequest)
		err := b.DecodeMessage(msg)
		m.FileEvent = &FileRequest_UpdateEvent{msg}
		return true, err
	case 3: // fileEvent.deleteEvent
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DeleteFileRequest)
		err := b.DecodeMessage(msg)
		m.FileEvent = &FileRequest_DeleteEvent{msg}
		return true, err
	default:
		return false, nil
	}
}

func _FileRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*FileRequest)
	// fileEvent
	switch x := m.FileEvent.(type) {
	case *FileRequest_CreateEvent:
		s := proto.Size(x.CreateEvent)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FileRequest_UpdateEvent:
		s := proto.Size(x.UpdateEvent)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FileRequest_DeleteEvent:
		s := proto.Size(x.DeleteEvent)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CreateFileRequest struct {
	UserID               int64    `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	RevisionID           string   `protobuf:"bytes,2,opt,name=revisionID,proto3" json:"revisionID,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ParentID             string   `protobuf:"bytes,4,opt,name=parentID,proto3" json:"parentID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateFileRequest) Reset()         { *m = CreateFileRequest{} }
func (m *CreateFileRequest) String() string { return proto.CompactTextString(m) }
func (*CreateFileRequest) ProtoMessage()    {}
func (*CreateFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_file_4e4933dfd66f3b71, []int{3}
}
func (m *CreateFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateFileRequest.Unmarshal(m, b)
}
func (m *CreateFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateFileRequest.Marshal(b, m, deterministic)
}
func (dst *CreateFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateFileRequest.Merge(dst, src)
}
func (m *CreateFileRequest) XXX_Size() int {
	return xxx_messageInfo_CreateFileRequest.Size(m)
}
func (m *CreateFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateFileRequest proto.InternalMessageInfo

func (m *CreateFileRequest) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *CreateFileRequest) GetRevisionID() string {
	if m != nil {
		return m.RevisionID
	}
	return ""
}

func (m *CreateFileRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateFileRequest) GetParentID() string {
	if m != nil {
		return m.ParentID
	}
	return ""
}

type GetFileRequest struct {
	UserID               int64    `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	FileID               string   `protobuf:"bytes,2,opt,name=fileID,proto3" json:"fileID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFileRequest) Reset()         { *m = GetFileRequest{} }
func (m *GetFileRequest) String() string { return proto.CompactTextString(m) }
func (*GetFileRequest) ProtoMessage()    {}
func (*GetFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_file_4e4933dfd66f3b71, []int{4}
}
func (m *GetFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFileRequest.Unmarshal(m, b)
}
func (m *GetFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFileRequest.Marshal(b, m, deterministic)
}
func (dst *GetFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFileRequest.Merge(dst, src)
}
func (m *GetFileRequest) XXX_Size() int {
	return xxx_messageInfo_GetFileRequest.Size(m)
}
func (m *GetFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFileRequest proto.InternalMessageInfo

func (m *GetFileRequest) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *GetFileRequest) GetFileID() string {
	if m != nil {
		return m.FileID
	}
	return ""
}

type UpdateFileRequest struct {
	UserID int64  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	FileID string `protobuf:"bytes,2,opt,name=fileID,proto3" json:"fileID,omitempty"`
	// The name of the file (optionally used for renames)
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// The ID of the parent folder (optionally used for moves)
	ParentID             string   `protobuf:"bytes,4,opt,name=parentID,proto3" json:"parentID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateFileRequest) Reset()         { *m = UpdateFileRequest{} }
func (m *UpdateFileRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateFileRequest) ProtoMessage()    {}
func (*UpdateFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_file_4e4933dfd66f3b71, []int{5}
}
func (m *UpdateFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateFileRequest.Unmarshal(m, b)
}
func (m *UpdateFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateFileRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateFileRequest.Merge(dst, src)
}
func (m *UpdateFileRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateFileRequest.Size(m)
}
func (m *UpdateFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateFileRequest proto.InternalMessageInfo

func (m *UpdateFileRequest) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *UpdateFileRequest) GetFileID() string {
	if m != nil {
		return m.FileID
	}
	return ""
}

func (m *UpdateFileRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateFileRequest) GetParentID() string {
	if m != nil {
		return m.ParentID
	}
	return ""
}

type DeleteFileRequest struct {
	UserID               int64    `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	FileID               string   `protobuf:"bytes,2,opt,name=fileID,proto3" json:"fileID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteFileRequest) Reset()         { *m = DeleteFileRequest{} }
func (m *DeleteFileRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteFileRequest) ProtoMessage()    {}
func (*DeleteFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_file_4e4933dfd66f3b71, []int{6}
}
func (m *DeleteFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteFileRequest.Unmarshal(m, b)
}
func (m *DeleteFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteFileRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteFileRequest.Merge(dst, src)
}
func (m *DeleteFileRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteFileRequest.Size(m)
}
func (m *DeleteFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteFileRequest proto.InternalMessageInfo

func (m *DeleteFileRequest) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *DeleteFileRequest) GetFileID() string {
	if m != nil {
		return m.FileID
	}
	return ""
}

func init() {
	proto.RegisterType((*File)(nil), "pb.File")
	proto.RegisterType((*FileResponse)(nil), "pb.FileResponse")
	proto.RegisterType((*FileRequest)(nil), "pb.FileRequest")
	proto.RegisterType((*CreateFileRequest)(nil), "pb.CreateFileRequest")
	proto.RegisterType((*GetFileRequest)(nil), "pb.GetFileRequest")
	proto.RegisterType((*UpdateFileRequest)(nil), "pb.UpdateFileRequest")
	proto.RegisterType((*DeleteFileRequest)(nil), "pb.DeleteFileRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FileServiceClient is the client API for FileService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FileServiceClient interface {
	EmitEvent(ctx context.Context, in *FileRequest, opts ...grpc.CallOption) (*FileResponse, error)
	CreateFile(ctx context.Context, in *CreateFileRequest, opts ...grpc.CallOption) (*FileResponse, error)
	GetFile(ctx context.Context, in *GetFileRequest, opts ...grpc.CallOption) (*FileResponse, error)
	UpdateFile(ctx context.Context, in *UpdateFileRequest, opts ...grpc.CallOption) (*FileResponse, error)
	DeleteFile(ctx context.Context, in *DeleteFileRequest, opts ...grpc.CallOption) (*FileResponse, error)
}

type fileServiceClient struct {
	cc *grpc.ClientConn
}

func NewFileServiceClient(cc *grpc.ClientConn) FileServiceClient {
	return &fileServiceClient{cc}
}

func (c *fileServiceClient) EmitEvent(ctx context.Context, in *FileRequest, opts ...grpc.CallOption) (*FileResponse, error) {
	out := new(FileResponse)
	err := c.cc.Invoke(ctx, "/pb.FileService/EmitEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) CreateFile(ctx context.Context, in *CreateFileRequest, opts ...grpc.CallOption) (*FileResponse, error) {
	out := new(FileResponse)
	err := c.cc.Invoke(ctx, "/pb.FileService/CreateFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) GetFile(ctx context.Context, in *GetFileRequest, opts ...grpc.CallOption) (*FileResponse, error) {
	out := new(FileResponse)
	err := c.cc.Invoke(ctx, "/pb.FileService/GetFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) UpdateFile(ctx context.Context, in *UpdateFileRequest, opts ...grpc.CallOption) (*FileResponse, error) {
	out := new(FileResponse)
	err := c.cc.Invoke(ctx, "/pb.FileService/UpdateFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) DeleteFile(ctx context.Context, in *DeleteFileRequest, opts ...grpc.CallOption) (*FileResponse, error) {
	out := new(FileResponse)
	err := c.cc.Invoke(ctx, "/pb.FileService/DeleteFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FileServiceServer is the server API for FileService service.
type FileServiceServer interface {
	EmitEvent(context.Context, *FileRequest) (*FileResponse, error)
	CreateFile(context.Context, *CreateFileRequest) (*FileResponse, error)
	GetFile(context.Context, *GetFileRequest) (*FileResponse, error)
	UpdateFile(context.Context, *UpdateFileRequest) (*FileResponse, error)
	DeleteFile(context.Context, *DeleteFileRequest) (*FileResponse, error)
}

func RegisterFileServiceServer(s *grpc.Server, srv FileServiceServer) {
	s.RegisterService(&_FileService_serviceDesc, srv)
}

func _FileService_EmitEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).EmitEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FileService/EmitEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).EmitEvent(ctx, req.(*FileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_CreateFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).CreateFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FileService/CreateFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).CreateFile(ctx, req.(*CreateFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_GetFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).GetFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FileService/GetFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).GetFile(ctx, req.(*GetFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_UpdateFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).UpdateFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FileService/UpdateFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).UpdateFile(ctx, req.(*UpdateFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_DeleteFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).DeleteFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FileService/DeleteFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).DeleteFile(ctx, req.(*DeleteFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.FileService",
	HandlerType: (*FileServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EmitEvent",
			Handler:    _FileService_EmitEvent_Handler,
		},
		{
			MethodName: "CreateFile",
			Handler:    _FileService_CreateFile_Handler,
		},
		{
			MethodName: "GetFile",
			Handler:    _FileService_GetFile_Handler,
		},
		{
			MethodName: "UpdateFile",
			Handler:    _FileService_UpdateFile_Handler,
		},
		{
			MethodName: "DeleteFile",
			Handler:    _FileService_DeleteFile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "file.proto",
}

func init() { proto.RegisterFile("file.proto", fileDescriptor_file_4e4933dfd66f3b71) }

var fileDescriptor_file_4e4933dfd66f3b71 = []byte{
	// 366 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xc1, 0x4e, 0xf2, 0x40,
	0x10, 0xc7, 0xa1, 0x34, 0x7c, 0x30, 0xfd, 0x82, 0x32, 0x89, 0xa4, 0x21, 0xc6, 0x98, 0x9e, 0x3c,
	0x18, 0xa2, 0x78, 0x30, 0xde, 0x8c, 0x14, 0x95, 0x6b, 0x8d, 0x0f, 0x00, 0x74, 0x48, 0x36, 0x81,
	0xb6, 0x76, 0x17, 0x2e, 0x3e, 0x8b, 0x4f, 0xe4, 0x4b, 0x99, 0x9d, 0xd6, 0x6e, 0x85, 0x92, 0x48,
	0xe2, 0xad, 0xf3, 0xdf, 0xf9, 0xed, 0xcc, 0xce, 0xfc, 0x53, 0x80, 0x85, 0x58, 0xd2, 0x20, 0x49,
	0x63, 0x15, 0xa3, 0x95, 0xcc, 0xbc, 0x05, 0xd8, 0x8f, 0x62, 0x49, 0xd8, 0x01, 0x4b, 0x84, 0x6e,
	0xfd, 0xbc, 0x7e, 0xd1, 0x0e, 0x2c, 0x11, 0xe2, 0x19, 0x40, 0x4a, 0x1b, 0x21, 0x45, 0x1c, 0x4d,
	0x7c, 0xd7, 0x62, 0xbd, 0xa4, 0x20, 0x82, 0x1d, 0x4d, 0x57, 0xe4, 0x36, 0xf8, 0x84, 0xbf, 0xb1,
	0x0f, 0xad, 0x64, 0x9a, 0x52, 0xa4, 0x26, 0xbe, 0x6b, 0xb3, 0x5e, 0xc4, 0xde, 0x25, 0xfc, 0xd7,
	0x75, 0x02, 0x92, 0x49, 0x1c, 0x49, 0xc2, 0x53, 0xb0, 0x75, 0x27, 0x5c, 0xd1, 0x19, 0xb6, 0x06,
	0xc9, 0x6c, 0xc0, 0xe7, 0xac, 0x7a, 0x9f, 0x75, 0x70, 0xb2, 0xf4, 0xb7, 0x35, 0x49, 0x85, 0x77,
	0xe0, 0xcc, 0x53, 0x9a, 0x2a, 0x1a, 0x6f, 0x28, 0x52, 0x39, 0x74, 0xa2, 0xa1, 0x11, 0xcb, 0xa5,
	0xdc, 0xe7, 0x5a, 0x50, 0xce, 0xd5, 0xe8, 0x3a, 0x09, 0x0b, 0xd4, 0x32, 0xe8, 0x2b, 0xcb, 0x5b,
	0x68, 0x29, 0x57, 0xa3, 0x21, 0x2d, 0xe9, 0x1b, 0x6d, 0x18, 0xd4, 0x67, 0x79, 0x0b, 0x2d, 0xe5,
	0x3e, 0x38, 0xd0, 0xd6, 0x0f, 0xe1, 0xc0, 0x7b, 0x87, 0xee, 0x4e, 0x9b, 0xd8, 0x83, 0xe6, 0x5a,
	0x52, 0x3a, 0xf1, 0xf9, 0x35, 0x8d, 0x20, 0x8f, 0xfe, 0x7c, 0xf0, 0xf7, 0xd0, 0x79, 0x22, 0xf5,
	0x9b, 0xca, 0x3d, 0x68, 0xea, 0x9e, 0x8b, 0xaa, 0x79, 0xe4, 0x49, 0xe8, 0xee, 0x8c, 0xea, 0xd0,
	0x4b, 0x0e, 0x6e, 0x7b, 0x04, 0xdd, 0x9d, 0x21, 0x1f, 0x5a, 0x74, 0xf8, 0x61, 0x65, 0x36, 0x7a,
	0xa1, 0x74, 0x23, 0xe6, 0x84, 0x57, 0xd0, 0x1e, 0xaf, 0x84, 0xca, 0xb6, 0x7b, 0x54, 0x78, 0x2e,
	0xbb, 0xbd, 0x7f, 0x6c, 0x84, 0xcc, 0xa4, 0x5e, 0x0d, 0x6f, 0x01, 0xcc, 0xea, 0xb0, 0xda, 0x71,
	0x95, 0xe0, 0x35, 0xfc, 0xcb, 0xc7, 0x8e, 0xa8, 0x8f, 0x7f, 0xee, 0x60, 0x5f, 0x2d, 0x33, 0x67,
	0xac, 0xb6, 0xe8, 0x3e, 0xd0, 0xcc, 0x0a, 0xab, 0x0d, 0x5a, 0x05, 0xce, 0x9a, 0xfc, 0x1f, 0xb8,
	0xf9, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x65, 0xc0, 0x21, 0x0f, 0x15, 0x04, 0x00, 0x00,
}
